//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Api.ServiceFatture {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceFatture.RestAPISoap")]
    public interface RestAPISoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string login(string username, string password, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login", ReplyAction="*")]
        System.Threading.Tasks.Task<string> loginAsync(string username, string password, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/loginCRM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string loginCRM(string username, string password, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/loginCRM", ReplyAction="*")]
        System.Threading.Tasks.Task<string> loginCRMAsync(string username, string password, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string checkUser(string username, string password, string txn_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> checkUserAsync(string username, string password, string txn_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/loginSSO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string loginSSO(string username, string password, string page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/loginSSO", ReplyAction="*")]
        System.Threading.Tasks.Task<string> loginSSOAsync(string username, string password, string page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/changePW", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string changePW(string token, string idMittente, string oldPW, string newPW, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/changePW", ReplyAction="*")]
        System.Threading.Tasks.Task<string> changePWAsync(string token, string idMittente, string oldPW, string newPW, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string checkToken(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkToken", ReplyAction="*")]
        System.Threading.Tasks.Task<string> checkTokenAsync(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoBenzinaio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaDocumentoBenzinaio(string token, string idMittente, string idDestinatario, int isPrivato, double importoPagato, string targa, double litri, string modalitaPagamento, string numeroDocumento, object qrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoBenzinaio", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaDocumentoBenzinaioAsync(string token, string idMittente, string idDestinatario, int isPrivato, double importoPagato, string targa, double litri, string modalitaPagamento, string numeroDocumento, object qrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaDocumento(string token, string idMittente, string idDestinatario, int isPrivato, string modalitaPagamento, string causale, string numeroDocumento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumento", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaDocumentoAsync(string token, string idMittente, string idDestinatario, int isPrivato, string modalitaPagamento, string causale, string numeroDocumento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoFull", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaDocumentoFull(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoFull", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaDocumentoFullAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoFullTD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaDocumentoFullTD(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string TipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoFullTD", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaDocumentoFullTDAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string TipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoAutFullTD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaDocumentoAutFullTD(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string tipoDocumento, string regimeFiscale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoAutFullTD", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaDocumentoAutFullTDAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string tipoDocumento, string regimeFiscale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaNotaCreditoFull", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaNotaCreditoFull(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string idFattura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaNotaCreditoFull", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaNotaCreditoFullAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string idFattura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/test", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string test(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/test", ReplyAction="*")]
        System.Threading.Tasks.Task<string> testAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoFullRound", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaDocumentoFullRound(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, double arrotondamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoFullRound", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaDocumentoFullRoundAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, double arrotondamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoFullRoundRit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaDocumentoFullRoundRit(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, double arrotondamento, double aliquotaRitenuta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoFullRoundRit", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaDocumentoFullRoundRitAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, double arrotondamento, double aliquotaRitenuta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoFullRoundAltreRit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaDocumentoFullRoundAltreRit(
                    string token, 
                    string idMittente, 
                    string idDestinatario, 
                    int isPrivato, 
                    string causale, 
                    string numeroDocumento, 
                    string dataDocumento, 
                    double importoBollo, 
                    Api.ServiceFatture.DatiPagamentoListObject datiPagamento, 
                    Api.ServiceFatture.ProdListObject prodList, 
                    Api.ServiceFatture.QRCodeObject qrCode, 
                    string attachmentName, 
                    string attachmentContent, 
                    double arrotondamento, 
                    double aliquotaRitenuta, 
                    string applicaAltreRitenute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoFullRoundAltreRit", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaDocumentoFullRoundAltreRitAsync(
                    string token, 
                    string idMittente, 
                    string idDestinatario, 
                    int isPrivato, 
                    string causale, 
                    string numeroDocumento, 
                    string dataDocumento, 
                    double importoBollo, 
                    Api.ServiceFatture.DatiPagamentoListObject datiPagamento, 
                    Api.ServiceFatture.ProdListObject prodList, 
                    Api.ServiceFatture.QRCodeObject qrCode, 
                    string attachmentName, 
                    string attachmentContent, 
                    double arrotondamento, 
                    double aliquotaRitenuta, 
                    string applicaAltreRitenute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaNotaCreditoParziale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaNotaCreditoParziale(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string idFatturaRif, string lineeRif, string retFileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaNotaCreditoParziale", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaNotaCreditoParzialeAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string idFatturaRif, string lineeRif, string retFileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaNotaCredito", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaNotaCredito(string token, string idMittente, string idFattura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaNotaCredito", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaNotaCreditoAsync(string token, string idMittente, string idFattura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaNotaCreditoNumero", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaNotaCreditoNumero(string token, string idMittente, string idFattura, string numeroDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaNotaCreditoNumero", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaNotaCreditoNumeroAsync(string token, string idMittente, string idFattura, string numeroDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaNotaCreditoNumeroData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaNotaCreditoNumeroData(string token, string idMittente, string idFatturaRif, string numeroDocumento, string dataDocumento, string causale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaNotaCreditoNumeroData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaNotaCreditoNumeroDataAsync(string token, string idMittente, string idFatturaRif, string numeroDocumento, string dataDocumento, string causale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserData(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserDataAsync(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocuments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserDocuments(string token, string idMittente, string dataUserId, string refYear, string refMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocuments", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserDocumentsAsync(string token, string idMittente, string dataUserId, string refYear, string refMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserStatusDocuments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserStatusDocuments(string token, string idMittente, string dataUserId, string idDocumentList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserStatusDocuments", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserStatusDocumentsAsync(string token, string idMittente, string dataUserId, string idDocumentList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getSubUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getSubUser(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getSubUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getSubUserAsync(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getSubUserCRM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getSubUserCRM(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getSubUserCRM", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getSubUserCRMAsync(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUsersDomain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUsersDomain(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUsersDomain", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUsersDomainAsync(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteDocumentDomain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deleteDocumentDomain(string token, string idMittente, string dataUserId, int idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteDocumentDomain", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deleteDocumentDomainAsync(string token, string idMittente, string dataUserId, int idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUsersDomainDocCounter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUsersDomainDocCounter(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUsersDomainDocCounter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUsersDomainDocCounterAsync(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUsersDomainCRM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUsersDomainCRM(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUsersDomainCRM", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUsersDomainCRMAsync(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUsersMultiIVADomain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUsersMultiIVADomain(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUsersMultiIVADomain", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUsersMultiIVADomainAsync(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserDocument(string token, string idMittente, string dataUserId, string idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserDocumentAsync(string token, string idMittente, string dataUserId, string idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserDocumentId(string token, string idMittente, string dataUserId, string tipoDocumento, string numeroDocumento, string annoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentId", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserDocumentIdAsync(string token, string idMittente, string dataUserId, string tipoDocumento, string numeroDocumento, string annoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserXML(string token, string idMittente, string dataUserId, string idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserXML", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserXMLAsync(string token, string idMittente, string dataUserId, string idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentsFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserDocumentsFilter(string token, string idMittente, string dataUserId, string refYear, string refMonth, string filterKey, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentsFilter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserDocumentsFilterAsync(string token, string idMittente, string dataUserId, string refYear, string refMonth, string filterKey, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentsFilterCreationDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserDocumentsFilterCreationDate(string token, string idMittente, string dataUserId, string refYear, string refMonth, string filterKey, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentsFilterCreationDate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserDocumentsFilterCreationDateAsync(string token, string idMittente, string dataUserId, string refYear, string refMonth, string filterKey, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentsDomainFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserDocumentsDomainFilter(string token, string idMittente, string refYear, string refMonth, string filterKey, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentsDomainFilter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserDocumentsDomainFilterAsync(string token, string idMittente, string refYear, string refMonth, string filterKey, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentsDomainFilterCreationDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserDocumentsDomainFilterCreationDate(string token, string idMittente, string refYear, string refMonth, string filterKey, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentsDomainFilterCreationDate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserDocumentsDomainFilterCreationDateAsync(string token, string idMittente, string refYear, string refMonth, string filterKey, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/calcolaTotaleDocumento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string calcolaTotaleDocumento(string token, string idMittente, string idDestinatario, int isPrivato, object prodList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/calcolaTotaleDocumento", ReplyAction="*")]
        System.Threading.Tasks.Task<string> calcolaTotaleDocumentoAsync(string token, string idMittente, string idDestinatario, int isPrivato, object prodList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEsitoDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getEsitoDocument(string token, string idMittente, string idFattura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEsitoDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getEsitoDocumentAsync(string token, string idMittente, string idFattura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEsitoDocumentXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getEsitoDocumentXML(string token, string idMittente, string idFattura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEsitoDocumentXML", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getEsitoDocumentXMLAsync(string token, string idMittente, string idFattura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sendXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string sendXML(string token, string idMittente, string dataUserId, string base64File, string nomeFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sendXML", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sendXMLAsync(string token, string idMittente, string dataUserId, string base64File, string nomeFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/uploadXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string uploadXML(string token, string idMittente, string dataUserId, string base64File, string nomeFile, string tipoFile, string IdentificativoSdI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/uploadXML", ReplyAction="*")]
        System.Threading.Tasks.Task<string> uploadXMLAsync(string token, string idMittente, string dataUserId, string base64File, string nomeFile, string tipoFile, string IdentificativoSdI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registerEndPoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string registerEndPoint(string token, string idMittente, string endPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registerEndPoint", ReplyAction="*")]
        System.Threading.Tasks.Task<string> registerEndPointAsync(string token, string idMittente, string endPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deregisterEndPoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deregisterEndPoint(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deregisterEndPoint", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deregisterEndPointAsync(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/signFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string signFile(string token, string idMittente, string base64File);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/signFile", ReplyAction="*")]
        System.Threading.Tasks.Task<string> signFileAsync(string token, string idMittente, string base64File);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaAccount(string token, string idMittente, string email, string isPersonaFisica, int isMultiIVA, string nome, string cognome, string denominazione, string partitaIVA, string codiceFiscale, string sendMailType, string retEmail, int numFatture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaAccountAsync(string token, string idMittente, string email, string isPersonaFisica, int isMultiIVA, string nome, string cognome, string denominazione, string partitaIVA, string codiceFiscale, string sendMailType, string retEmail, int numFatture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaAccountCRM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaAccountCRM(string token, string idMittente, string partitaIVA, string email, string nome, string cognome);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaAccountCRM", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaAccountCRMAsync(string token, string idMittente, string partitaIVA, string email, string nome, string cognome);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/register", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string register(
                    string token, 
                    string nome, 
                    string cognome, 
                    string denominazione, 
                    string email, 
                    string partitaIVA, 
                    string codiceFiscale, 
                    string isPersonaFisica, 
                    string idPaese, 
                    string provincia, 
                    string comune, 
                    string cap, 
                    string indirizzo, 
                    string password, 
                    string AdE_CodiceFiscale, 
                    string AdE_PIN, 
                    string AdE_Password, 
                    string AdE_TipoIncarico, 
                    string sendMailType, 
                    string discriminator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/register", ReplyAction="*")]
        System.Threading.Tasks.Task<string> registerAsync(
                    string token, 
                    string nome, 
                    string cognome, 
                    string denominazione, 
                    string email, 
                    string partitaIVA, 
                    string codiceFiscale, 
                    string isPersonaFisica, 
                    string idPaese, 
                    string provincia, 
                    string comune, 
                    string cap, 
                    string indirizzo, 
                    string password, 
                    string AdE_CodiceFiscale, 
                    string AdE_PIN, 
                    string AdE_Password, 
                    string AdE_TipoIncarico, 
                    string sendMailType, 
                    string discriminator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registerUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string registerUpdate(string token, string idMittente, string nome, string cognome, string denominazione, string codiceFiscale, string isPersonaFisica, string provincia, string comune, string cap, string indirizzo, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registerUpdate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> registerUpdateAsync(string token, string idMittente, string nome, string cognome, string denominazione, string codiceFiscale, string isPersonaFisica, string provincia, string comune, string cap, string indirizzo, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registerChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string registerChangePassword(string token, string idMittente, string currentPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registerChangePassword", ReplyAction="*")]
        System.Threading.Tasks.Task<string> registerChangePasswordAsync(string token, string idMittente, string currentPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/resetPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object resetPassword(string token, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/resetPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<object> resetPasswordAsync(string token, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/modificaAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string modificaAccount(string token, string idMittente, string email, string isPersonaFisica, int isMultiIVA, string nome, string cognome, string denominazione, string partitaIVA, string codiceFiscale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/modificaAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> modificaAccountAsync(string token, string idMittente, string email, string isPersonaFisica, int isMultiIVA, string nome, string cognome, string denominazione, string partitaIVA, string codiceFiscale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/enableAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string enableAccount(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/enableAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> enableAccountAsync(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/increaseNumInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string increaseNumInvoice(string token, string idMittente, string dataUserId, int numeroFatture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/increaseNumInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> increaseNumInvoiceAsync(string token, string idMittente, string dataUserId, int numeroFatture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/decreaseNumInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string decreaseNumInvoice(string token, string idMittente, string dataUserId, int numeroFatture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/decreaseNumInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> decreaseNumInvoiceAsync(string token, string idMittente, string dataUserId, int numeroFatture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateAnagData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateAnagData(string token, string idMittente, string dataUserId, string nome, string cognome, string denominazione, string email, string numeroFatture, string dataRinnovo, int contrattoAnnuale, string Dominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateAnagData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateAnagDataAsync(string token, string idMittente, string dataUserId, string nome, string cognome, string denominazione, string email, string numeroFatture, string dataRinnovo, int contrattoAnnuale, string Dominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buyPlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string buyPlan(string token, string idMittente, string partitaIVA, string codicePiano);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buyPlan", ReplyAction="*")]
        System.Threading.Tasks.Task<string> buyPlanAsync(string token, string idMittente, string partitaIVA, string codicePiano);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/disableAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string disableAccount(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/disableAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> disableAccountAsync(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaPreviewDocumento(string token, string idMittente, string idDestinatario, int isPrivato, string modalitaPagamento, string causale, string numeroDocumento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumento", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaPreviewDocumentoAsync(string token, string idMittente, string idDestinatario, int isPrivato, string modalitaPagamento, string causale, string numeroDocumento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumentoFull", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaPreviewDocumentoFull(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumentoFull", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaPreviewDocumentoFullAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumentoFullTD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaPreviewDocumentoFullTD(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string TipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumentoFullTD", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaPreviewDocumentoFullTDAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string TipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumentoAutFullTD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaPreviewDocumentoAutFullTD(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string tipoDocumento, string regimeFiscale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumentoAutFullTD", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaPreviewDocumentoAutFullTDAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string tipoDocumento, string regimeFiscale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/predisponiPreviewDDT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string predisponiPreviewDDT(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string tipoDDT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/predisponiPreviewDDT", ReplyAction="*")]
        System.Threading.Tasks.Task<string> predisponiPreviewDDTAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string tipoDDT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumentoFullRound", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaPreviewDocumentoFullRound(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, double arrotondamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumentoFullRound", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaPreviewDocumentoFullRoundAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, double arrotondamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumentoFullRoundRit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaPreviewDocumentoFullRoundRit(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, double arrotondamento, double aliquotaRitenuta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaPreviewDocumentoFullRoundRit", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaPreviewDocumentoFullRoundRitAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, double arrotondamento, double aliquotaRitenuta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPreviewDocumento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getPreviewDocumento(string token, string idMittente, int idDocumento, string retFileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPreviewDocumento", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getPreviewDocumentoAsync(string token, string idMittente, int idDocumento, string retFileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sendDocumento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string sendDocumento(string token, string idMittente, int idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sendDocumento", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sendDocumentoAsync(string token, string idMittente, int idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteDocumento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deleteDocumento(string token, string idMittente, int idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteDocumento", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deleteDocumentoAsync(string token, string idMittente, int idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/payInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string payInvoice(string token, string idMittente, string dataUserId, int idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/payInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> payInvoiceAsync(string token, string idMittente, string dataUserId, int idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelPayInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string cancelPayInvoice(string token, string idMittente, string dataUserId, int idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cancelPayInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> cancelPayInvoiceAsync(string token, string idMittente, string dataUserId, int idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getRubrica", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getRubrica(string token, string idMittente, string dataUserId, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getRubrica", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getRubricaAsync(string token, string idMittente, string dataUserId, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCounter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getCounter(string token, string idMittente, string refYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCounter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getCounterAsync(string token, string idMittente, string refYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserCounter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserCounter(string token, string idMittente, string dataUserId, string refYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserCounter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserCounterAsync(string token, string idMittente, string dataUserId, string refYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDashboard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getDashboard(string token, string idMittente, string dataUserId, string refYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDashboard", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getDashboardAsync(string token, string idMittente, string dataUserId, string refYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string addCliente(
                    string token, 
                    string idMittente, 
                    string idPaese, 
                    string idCodice, 
                    string codiceFiscale, 
                    string checkPersonaFisica, 
                    string denominazione, 
                    string titolo, 
                    string nome, 
                    string cognome, 
                    string codEORI, 
                    string indirizzo, 
                    string comune, 
                    string cap, 
                    string provincia, 
                    string nazione, 
                    string pecDestinatario, 
                    string soggettoPrivato, 
                    string codiceDestinatario, 
                    string telefono, 
                    string fax, 
                    string referente, 
                    string referentePartitaIva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<string> addClienteAsync(
                    string token, 
                    string idMittente, 
                    string idPaese, 
                    string idCodice, 
                    string codiceFiscale, 
                    string checkPersonaFisica, 
                    string denominazione, 
                    string titolo, 
                    string nome, 
                    string cognome, 
                    string codEORI, 
                    string indirizzo, 
                    string comune, 
                    string cap, 
                    string provincia, 
                    string nazione, 
                    string pecDestinatario, 
                    string soggettoPrivato, 
                    string codiceDestinatario, 
                    string telefono, 
                    string fax, 
                    string referente, 
                    string referentePartitaIva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updCliente(
                    string token, 
                    string idMittente, 
                    int idCliente, 
                    string idPaese, 
                    string idCodice, 
                    string codiceFiscale, 
                    string checkPersonaFisica, 
                    string denominazione, 
                    string titolo, 
                    string nome, 
                    string cognome, 
                    string codEORI, 
                    string indirizzo, 
                    string comune, 
                    string cap, 
                    string provincia, 
                    string nazione, 
                    string pecDestinatario, 
                    string soggettoPrivato, 
                    string codiceDestinatario, 
                    string telefono, 
                    string fax, 
                    string referente, 
                    string referentePartitaIva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updClienteAsync(
                    string token, 
                    string idMittente, 
                    int idCliente, 
                    string idPaese, 
                    string idCodice, 
                    string codiceFiscale, 
                    string checkPersonaFisica, 
                    string denominazione, 
                    string titolo, 
                    string nome, 
                    string cognome, 
                    string codEORI, 
                    string indirizzo, 
                    string comune, 
                    string cap, 
                    string provincia, 
                    string nazione, 
                    string pecDestinatario, 
                    string soggettoPrivato, 
                    string codiceDestinatario, 
                    string telefono, 
                    string fax, 
                    string referente, 
                    string referentePartitaIva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/delCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string delCliente(string token, string idMittente, int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/delCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<string> delClienteAsync(string token, string idMittente, int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getClienti", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getClienti(string token, string idMittente, string dataUserId, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getClienti", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getClientiAsync(string token, string idMittente, string dataUserId, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getCliente(string token, string idMittente, int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getClienteAsync(string token, string idMittente, int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addProdotto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string addProdotto(string token, string idMittente, string codice, string denominazione, string um, string descrizione, decimal prezzounitario, decimal aliquotaiva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addProdotto", ReplyAction="*")]
        System.Threading.Tasks.Task<string> addProdottoAsync(string token, string idMittente, string codice, string denominazione, string um, string descrizione, decimal prezzounitario, decimal aliquotaiva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updProdotto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updProdotto(string token, string idMittente, int idProdotto, string codice, string denominazione, string um, string descrizione, string prezzounitario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updProdotto", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updProdottoAsync(string token, string idMittente, int idProdotto, string codice, string denominazione, string um, string descrizione, string prezzounitario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/delProdotto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string delProdotto(string token, string idMittente, int idProdotto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/delProdotto", ReplyAction="*")]
        System.Threading.Tasks.Task<string> delProdottoAsync(string token, string idMittente, int idProdotto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLastProgDoc", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getLastProgDoc(string token, string idMittente, string dataUserId, string tipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLastProgDoc", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getLastProgDocAsync(string token, string idMittente, string dataUserId, string tipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getProdotti", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getProdotti(string token, string idMittente, string dataUserId, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getProdotti", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getProdottiAsync(string token, string idMittente, string dataUserId, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMetodiPagamentoUtente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getMetodiPagamentoUtente(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMetodiPagamentoUtente", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getMetodiPagamentoUtenteAsync(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUserDocumentDetail(string token, string idMittente, string dataUserId, string idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserDocumentDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserDocumentDetailAsync(string token, string idMittente, string dataUserId, string idDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getFileEsito", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getFileEsito(string token, string idMittente, string idNotifica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getFileEsito", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getFileEsitoAsync(string token, string idMittente, string idNotifica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAliquoteIVA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getAliquoteIVA(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAliquoteIVA", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getAliquoteIVAAsync(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getCustomerInfo(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getCustomerInfoAsync(string token, string idMittente, string dataUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMaxIdDocumentDomain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getMaxIdDocumentDomain(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMaxIdDocumentDomain", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getMaxIdDocumentDomainAsync(string token, string idMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDatiPIVA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getDatiPIVA(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string partitaIVAToCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDatiPIVA", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getDatiPIVAAsync(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string partitaIVAToCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoCommerciale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaDocumentoCommerciale(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string modalitaPagamento, string codiceLotteriaCliente, Api.ServiceFatture.ProdListDCObject prodList, int isRetry, string idScontrino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaDocumentoCommerciale", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaDocumentoCommercialeAsync(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string modalitaPagamento, string codiceLotteriaCliente, Api.ServiceFatture.ProdListDCObject prodList, int isRetry, string idScontrino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaResoParzialeDocumentoCommerciale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaResoParzialeDocumentoCommerciale(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string idtrx, string idScontrino, Api.ServiceFatture.ProdListDCObject prodList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaResoParzialeDocumentoCommerciale", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaResoParzialeDocumentoCommercialeAsync(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string idtrx, string idScontrino, Api.ServiceFatture.ProdListDCObject prodList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaResoAnnulloDocumentoCommerciale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string creaResoAnnulloDocumentoCommerciale(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string Idtrx, string IdScontrino, string Tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creaResoAnnulloDocumentoCommerciale", ReplyAction="*")]
        System.Threading.Tasks.Task<string> creaResoAnnulloDocumentoCommercialeAsync(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string Idtrx, string IdScontrino, string Tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminaDocumentoCommerciale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string eliminaDocumentoCommerciale(string token, string idMittente, string IdScontrino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminaDocumentoCommerciale", ReplyAction="*")]
        System.Threading.Tasks.Task<string> eliminaDocumentoCommercialeAsync(string token, string idMittente, string IdScontrino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listaDocumentoCommerciale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string listaDocumentoCommerciale(string token, string idMittente, string NumeroPagina, string RighePerPagina, string TestoRicerca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listaDocumentoCommerciale", ReplyAction="*")]
        System.Threading.Tasks.Task<string> listaDocumentoCommercialeAsync(string token, string idMittente, string NumeroPagina, string RighePerPagina, string TestoRicerca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/dettaglioDocumentoCommerciale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string dettaglioDocumentoCommerciale(string token, string idMittente, int IdScontrino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/dettaglioDocumentoCommerciale", ReplyAction="*")]
        System.Threading.Tasks.Task<string> dettaglioDocumentoCommercialeAsync(string token, string idMittente, int IdScontrino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sommarioDocumentoCommerciale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string sommarioDocumentoCommerciale(string token, string idMittente, int dataDa, int dataA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sommarioDocumentoCommerciale", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sommarioDocumentoCommercialeAsync(string token, string idMittente, int dataDa, int dataA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkCredenzialiAdE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string checkCredenzialiAdE(string token, string PartitaIva, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkCredenzialiAdE", ReplyAction="*")]
        System.Threading.Tasks.Task<string> checkCredenzialiAdEAsync(string token, string PartitaIva, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertUserToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insertUserToken(string authToken, string token, string partitaIVA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertUserToken", ReplyAction="*")]
        System.Threading.Tasks.Task<string> insertUserTokenAsync(string authToken, string token, string partitaIVA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkUserToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string checkUserToken(string authToken, string token, string partitaIVA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkUserToken", ReplyAction="*")]
        System.Threading.Tasks.Task<string> checkUserTokenAsync(string authToken, string token, string partitaIVA);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DetLineaScontrinoObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double aliquotaIVAField;
        
        private string descrizioneProdottoField;
        
        private string idElementoContabileField;
        
        private double imponibileField;
        
        private double imponibileNettoField;
        
        private double importoIVAField;
        
        private double prezzoUnitarioField;
        
        private double quantitaField;
        
        private double resiPregressiField;
        
        private double resoField;
        
        private double scontoUnitarioField;
        
        private double totaleField;
        
        private string naturaField;
        
        private string riferimentoNormativoField;
        
        private string statoField;
        
        private string statoDescField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public double aliquotaIVA {
            get {
                return this.aliquotaIVAField;
            }
            set {
                this.aliquotaIVAField = value;
                this.RaisePropertyChanged("aliquotaIVA");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string descrizioneProdotto {
            get {
                return this.descrizioneProdottoField;
            }
            set {
                this.descrizioneProdottoField = value;
                this.RaisePropertyChanged("descrizioneProdotto");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string idElementoContabile {
            get {
                return this.idElementoContabileField;
            }
            set {
                this.idElementoContabileField = value;
                this.RaisePropertyChanged("idElementoContabile");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double imponibile {
            get {
                return this.imponibileField;
            }
            set {
                this.imponibileField = value;
                this.RaisePropertyChanged("imponibile");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double imponibileNetto {
            get {
                return this.imponibileNettoField;
            }
            set {
                this.imponibileNettoField = value;
                this.RaisePropertyChanged("imponibileNetto");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double importoIVA {
            get {
                return this.importoIVAField;
            }
            set {
                this.importoIVAField = value;
                this.RaisePropertyChanged("importoIVA");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double prezzoUnitario {
            get {
                return this.prezzoUnitarioField;
            }
            set {
                this.prezzoUnitarioField = value;
                this.RaisePropertyChanged("prezzoUnitario");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double quantita {
            get {
                return this.quantitaField;
            }
            set {
                this.quantitaField = value;
                this.RaisePropertyChanged("quantita");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public double resiPregressi {
            get {
                return this.resiPregressiField;
            }
            set {
                this.resiPregressiField = value;
                this.RaisePropertyChanged("resiPregressi");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public double reso {
            get {
                return this.resoField;
            }
            set {
                this.resoField = value;
                this.RaisePropertyChanged("reso");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public double scontoUnitario {
            get {
                return this.scontoUnitarioField;
            }
            set {
                this.scontoUnitarioField = value;
                this.RaisePropertyChanged("scontoUnitario");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public double totale {
            get {
                return this.totaleField;
            }
            set {
                this.totaleField = value;
                this.RaisePropertyChanged("totale");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string natura {
            get {
                return this.naturaField;
            }
            set {
                this.naturaField = value;
                this.RaisePropertyChanged("natura");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string riferimentoNormativo {
            get {
                return this.riferimentoNormativoField;
            }
            set {
                this.riferimentoNormativoField = value;
                this.RaisePropertyChanged("riferimentoNormativo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string stato {
            get {
                return this.statoField;
            }
            set {
                this.statoField = value;
                this.RaisePropertyChanged("stato");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string statoDesc {
            get {
                return this.statoDescField;
            }
            set {
                this.statoDescField = value;
                this.RaisePropertyChanged("statoDesc");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProdListDCObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DetLineaScontrinoObject[] listField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DetLineaScontrinoObject[] list {
            get {
                return this.listField;
            }
            set {
                this.listField = value;
                this.RaisePropertyChanged("list");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DatiPagamentoObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string condizioniPagamentoField;
        
        private string beneficiarioField;
        
        private string modalitaPagamentoField;
        
        private string dataRiferimentoTerminiPagamentoField;
        
        private string giorniTerminiPagamentoField;
        
        private string dataScadenzaPagamentoField;
        
        private string importoPagamentoField;
        
        private string codUfficioPostaleField;
        
        private string cognomeQuietanzanteField;
        
        private string nomeQuietanzanteField;
        
        private string cFQuietanzanteField;
        
        private string titoloQuietanzanteField;
        
        private string istitutoFinanziarioField;
        
        private string iBANField;
        
        private string aBIField;
        
        private string cABField;
        
        private string bICField;
        
        private string scontoPagamentoAnticipatoField;
        
        private string dataLimitePagamentoAnticipatoField;
        
        private string penalitaPagamentiRitardatiField;
        
        private string dataDecorrenzaPenaleField;
        
        private string codicePagamentoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string condizioniPagamento {
            get {
                return this.condizioniPagamentoField;
            }
            set {
                this.condizioniPagamentoField = value;
                this.RaisePropertyChanged("condizioniPagamento");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string beneficiario {
            get {
                return this.beneficiarioField;
            }
            set {
                this.beneficiarioField = value;
                this.RaisePropertyChanged("beneficiario");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string modalitaPagamento {
            get {
                return this.modalitaPagamentoField;
            }
            set {
                this.modalitaPagamentoField = value;
                this.RaisePropertyChanged("modalitaPagamento");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string dataRiferimentoTerminiPagamento {
            get {
                return this.dataRiferimentoTerminiPagamentoField;
            }
            set {
                this.dataRiferimentoTerminiPagamentoField = value;
                this.RaisePropertyChanged("dataRiferimentoTerminiPagamento");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string giorniTerminiPagamento {
            get {
                return this.giorniTerminiPagamentoField;
            }
            set {
                this.giorniTerminiPagamentoField = value;
                this.RaisePropertyChanged("giorniTerminiPagamento");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string dataScadenzaPagamento {
            get {
                return this.dataScadenzaPagamentoField;
            }
            set {
                this.dataScadenzaPagamentoField = value;
                this.RaisePropertyChanged("dataScadenzaPagamento");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string importoPagamento {
            get {
                return this.importoPagamentoField;
            }
            set {
                this.importoPagamentoField = value;
                this.RaisePropertyChanged("importoPagamento");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string codUfficioPostale {
            get {
                return this.codUfficioPostaleField;
            }
            set {
                this.codUfficioPostaleField = value;
                this.RaisePropertyChanged("codUfficioPostale");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string cognomeQuietanzante {
            get {
                return this.cognomeQuietanzanteField;
            }
            set {
                this.cognomeQuietanzanteField = value;
                this.RaisePropertyChanged("cognomeQuietanzante");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string nomeQuietanzante {
            get {
                return this.nomeQuietanzanteField;
            }
            set {
                this.nomeQuietanzanteField = value;
                this.RaisePropertyChanged("nomeQuietanzante");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CFQuietanzante {
            get {
                return this.cFQuietanzanteField;
            }
            set {
                this.cFQuietanzanteField = value;
                this.RaisePropertyChanged("CFQuietanzante");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string titoloQuietanzante {
            get {
                return this.titoloQuietanzanteField;
            }
            set {
                this.titoloQuietanzanteField = value;
                this.RaisePropertyChanged("titoloQuietanzante");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string istitutoFinanziario {
            get {
                return this.istitutoFinanziarioField;
            }
            set {
                this.istitutoFinanziarioField = value;
                this.RaisePropertyChanged("istitutoFinanziario");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string IBAN {
            get {
                return this.iBANField;
            }
            set {
                this.iBANField = value;
                this.RaisePropertyChanged("IBAN");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string ABI {
            get {
                return this.aBIField;
            }
            set {
                this.aBIField = value;
                this.RaisePropertyChanged("ABI");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string CAB {
            get {
                return this.cABField;
            }
            set {
                this.cABField = value;
                this.RaisePropertyChanged("CAB");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string BIC {
            get {
                return this.bICField;
            }
            set {
                this.bICField = value;
                this.RaisePropertyChanged("BIC");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string scontoPagamentoAnticipato {
            get {
                return this.scontoPagamentoAnticipatoField;
            }
            set {
                this.scontoPagamentoAnticipatoField = value;
                this.RaisePropertyChanged("scontoPagamentoAnticipato");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string dataLimitePagamentoAnticipato {
            get {
                return this.dataLimitePagamentoAnticipatoField;
            }
            set {
                this.dataLimitePagamentoAnticipatoField = value;
                this.RaisePropertyChanged("dataLimitePagamentoAnticipato");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string penalitaPagamentiRitardati {
            get {
                return this.penalitaPagamentiRitardatiField;
            }
            set {
                this.penalitaPagamentiRitardatiField = value;
                this.RaisePropertyChanged("penalitaPagamentiRitardati");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string dataDecorrenzaPenale {
            get {
                return this.dataDecorrenzaPenaleField;
            }
            set {
                this.dataDecorrenzaPenaleField = value;
                this.RaisePropertyChanged("dataDecorrenzaPenale");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string codicePagamento {
            get {
                return this.codicePagamentoField;
            }
            set {
                this.codicePagamentoField = value;
                this.RaisePropertyChanged("codicePagamento");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DatiPagamentoListObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DatiPagamentoObject[] listField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DatiPagamentoObject[] list {
            get {
                return this.listField;
            }
            set {
                this.listField = value;
                this.RaisePropertyChanged("list");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class QRCodeSDIObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codField;
        
        private string pecField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string cod {
            get {
                return this.codField;
            }
            set {
                this.codField = value;
                this.RaisePropertyChanged("cod");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string pec {
            get {
                return this.pecField;
            }
            set {
                this.pecField = value;
                this.RaisePropertyChanged("pec");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class QRCodeAnagDomObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nazField;
        
        private string provField;
        
        private string comField;
        
        private string capField;
        
        private string indField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string naz {
            get {
                return this.nazField;
            }
            set {
                this.nazField = value;
                this.RaisePropertyChanged("naz");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string prov {
            get {
                return this.provField;
            }
            set {
                this.provField = value;
                this.RaisePropertyChanged("prov");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string com {
            get {
                return this.comField;
            }
            set {
                this.comField = value;
                this.RaisePropertyChanged("com");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string cap {
            get {
                return this.capField;
            }
            set {
                this.capField = value;
                this.RaisePropertyChanged("cap");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ind {
            get {
                return this.indField;
            }
            set {
                this.indField = value;
                this.RaisePropertyChanged("ind");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class QRCodeAnagObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nazField;
        
        private string pivaField;
        
        private string cfField;
        
        private string denomField;
        
        private string nomeField;
        
        private string cognomeField;
        
        private QRCodeAnagDomObject domFiscField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string naz {
            get {
                return this.nazField;
            }
            set {
                this.nazField = value;
                this.RaisePropertyChanged("naz");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string piva {
            get {
                return this.pivaField;
            }
            set {
                this.pivaField = value;
                this.RaisePropertyChanged("piva");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string cf {
            get {
                return this.cfField;
            }
            set {
                this.cfField = value;
                this.RaisePropertyChanged("cf");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string denom {
            get {
                return this.denomField;
            }
            set {
                this.denomField = value;
                this.RaisePropertyChanged("denom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
                this.RaisePropertyChanged("nome");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string cognome {
            get {
                return this.cognomeField;
            }
            set {
                this.cognomeField = value;
                this.RaisePropertyChanged("cognome");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public QRCodeAnagDomObject domFisc {
            get {
                return this.domFiscField;
            }
            set {
                this.domFiscField = value;
                this.RaisePropertyChanged("domFisc");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class QRCodeObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string qrCodeAgEntField;
        
        private string emailUtenteField;
        
        private QRCodeAnagObject anagField;
        
        private QRCodeSDIObject sDIField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string qrCodeAgEnt {
            get {
                return this.qrCodeAgEntField;
            }
            set {
                this.qrCodeAgEntField = value;
                this.RaisePropertyChanged("qrCodeAgEnt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string emailUtente {
            get {
                return this.emailUtenteField;
            }
            set {
                this.emailUtenteField = value;
                this.RaisePropertyChanged("emailUtente");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public QRCodeAnagObject anag {
            get {
                return this.anagField;
            }
            set {
                this.anagField = value;
                this.RaisePropertyChanged("anag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public QRCodeSDIObject SDI {
            get {
                return this.sDIField;
            }
            set {
                this.sDIField = value;
                this.RaisePropertyChanged("SDI");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AltriDatiGestionaliObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string tipoDatoField;
        
        private string riferimentoTestoField;
        
        private string riferimentoNumeroField;
        
        private string riferimentoDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string tipoDato {
            get {
                return this.tipoDatoField;
            }
            set {
                this.tipoDatoField = value;
                this.RaisePropertyChanged("tipoDato");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string riferimentoTesto {
            get {
                return this.riferimentoTestoField;
            }
            set {
                this.riferimentoTestoField = value;
                this.RaisePropertyChanged("riferimentoTesto");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string riferimentoNumero {
            get {
                return this.riferimentoNumeroField;
            }
            set {
                this.riferimentoNumeroField = value;
                this.RaisePropertyChanged("riferimentoNumero");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string riferimentoData {
            get {
                return this.riferimentoDataField;
            }
            set {
                this.riferimentoDataField = value;
                this.RaisePropertyChanged("riferimentoData");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AltriDatiGestionaliListObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AltriDatiGestionaliObject[] listField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public AltriDatiGestionaliObject[] list {
            get {
                return this.listField;
            }
            set {
                this.listField = value;
                this.RaisePropertyChanged("list");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProdObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string numeroLineaField;
        
        private string tipoCessionePrestazioneField;
        
        private string descrizioneField;
        
        private string quantitaField;
        
        private string unitaMisuraField;
        
        private string dataInizioPeriodoField;
        
        private string dataFinePeriodoField;
        
        private string prezzoUnitarioField;
        
        private string prezzoTotaleField;
        
        private string aliquotaIVAField;
        
        private string ritenutaField;
        
        private string naturaField;
        
        private string riferimentoAmministrazioneField;
        
        private string applicazioneCassaField;
        
        private string riferimentoNormativoField;
        
        private string percentualeScontoField;
        
        private string tipoCodiceArticoloField;
        
        private string codiceArticoloField;
        
        private string numeroDDTField;
        
        private string dataDDTField;
        
        private string numeroOrdAcqField;
        
        private string dataOrdAcqField;
        
        private string cupOrdAcqField;
        
        private string cigOrdAcqField;
        
        private string codCommessaConvenzioneOrdAcqField;
        
        private string numeroConvField;
        
        private string dataConvField;
        
        private string cupConvField;
        
        private string cigConvField;
        
        private string codCommessaConvenzioneConvField;
        
        private string numeroContField;
        
        private string dataContField;
        
        private string cupContField;
        
        private string cigContField;
        
        private string codCommessaConvenzioneContField;
        
        private AltriDatiGestionaliListObject altriDatiGestionaliField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string numeroLinea {
            get {
                return this.numeroLineaField;
            }
            set {
                this.numeroLineaField = value;
                this.RaisePropertyChanged("numeroLinea");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string tipoCessionePrestazione {
            get {
                return this.tipoCessionePrestazioneField;
            }
            set {
                this.tipoCessionePrestazioneField = value;
                this.RaisePropertyChanged("tipoCessionePrestazione");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string descrizione {
            get {
                return this.descrizioneField;
            }
            set {
                this.descrizioneField = value;
                this.RaisePropertyChanged("descrizione");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string quantita {
            get {
                return this.quantitaField;
            }
            set {
                this.quantitaField = value;
                this.RaisePropertyChanged("quantita");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string unitaMisura {
            get {
                return this.unitaMisuraField;
            }
            set {
                this.unitaMisuraField = value;
                this.RaisePropertyChanged("unitaMisura");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string dataInizioPeriodo {
            get {
                return this.dataInizioPeriodoField;
            }
            set {
                this.dataInizioPeriodoField = value;
                this.RaisePropertyChanged("dataInizioPeriodo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string dataFinePeriodo {
            get {
                return this.dataFinePeriodoField;
            }
            set {
                this.dataFinePeriodoField = value;
                this.RaisePropertyChanged("dataFinePeriodo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string prezzoUnitario {
            get {
                return this.prezzoUnitarioField;
            }
            set {
                this.prezzoUnitarioField = value;
                this.RaisePropertyChanged("prezzoUnitario");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string prezzoTotale {
            get {
                return this.prezzoTotaleField;
            }
            set {
                this.prezzoTotaleField = value;
                this.RaisePropertyChanged("prezzoTotale");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string aliquotaIVA {
            get {
                return this.aliquotaIVAField;
            }
            set {
                this.aliquotaIVAField = value;
                this.RaisePropertyChanged("aliquotaIVA");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ritenuta {
            get {
                return this.ritenutaField;
            }
            set {
                this.ritenutaField = value;
                this.RaisePropertyChanged("ritenuta");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string natura {
            get {
                return this.naturaField;
            }
            set {
                this.naturaField = value;
                this.RaisePropertyChanged("natura");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string riferimentoAmministrazione {
            get {
                return this.riferimentoAmministrazioneField;
            }
            set {
                this.riferimentoAmministrazioneField = value;
                this.RaisePropertyChanged("riferimentoAmministrazione");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string applicazioneCassa {
            get {
                return this.applicazioneCassaField;
            }
            set {
                this.applicazioneCassaField = value;
                this.RaisePropertyChanged("applicazioneCassa");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string riferimentoNormativo {
            get {
                return this.riferimentoNormativoField;
            }
            set {
                this.riferimentoNormativoField = value;
                this.RaisePropertyChanged("riferimentoNormativo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string percentualeSconto {
            get {
                return this.percentualeScontoField;
            }
            set {
                this.percentualeScontoField = value;
                this.RaisePropertyChanged("percentualeSconto");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string tipoCodiceArticolo {
            get {
                return this.tipoCodiceArticoloField;
            }
            set {
                this.tipoCodiceArticoloField = value;
                this.RaisePropertyChanged("tipoCodiceArticolo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string codiceArticolo {
            get {
                return this.codiceArticoloField;
            }
            set {
                this.codiceArticoloField = value;
                this.RaisePropertyChanged("codiceArticolo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string numeroDDT {
            get {
                return this.numeroDDTField;
            }
            set {
                this.numeroDDTField = value;
                this.RaisePropertyChanged("numeroDDT");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string dataDDT {
            get {
                return this.dataDDTField;
            }
            set {
                this.dataDDTField = value;
                this.RaisePropertyChanged("dataDDT");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string numeroOrdAcq {
            get {
                return this.numeroOrdAcqField;
            }
            set {
                this.numeroOrdAcqField = value;
                this.RaisePropertyChanged("numeroOrdAcq");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string dataOrdAcq {
            get {
                return this.dataOrdAcqField;
            }
            set {
                this.dataOrdAcqField = value;
                this.RaisePropertyChanged("dataOrdAcq");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string cupOrdAcq {
            get {
                return this.cupOrdAcqField;
            }
            set {
                this.cupOrdAcqField = value;
                this.RaisePropertyChanged("cupOrdAcq");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string cigOrdAcq {
            get {
                return this.cigOrdAcqField;
            }
            set {
                this.cigOrdAcqField = value;
                this.RaisePropertyChanged("cigOrdAcq");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string codCommessaConvenzioneOrdAcq {
            get {
                return this.codCommessaConvenzioneOrdAcqField;
            }
            set {
                this.codCommessaConvenzioneOrdAcqField = value;
                this.RaisePropertyChanged("codCommessaConvenzioneOrdAcq");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public string numeroConv {
            get {
                return this.numeroConvField;
            }
            set {
                this.numeroConvField = value;
                this.RaisePropertyChanged("numeroConv");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string dataConv {
            get {
                return this.dataConvField;
            }
            set {
                this.dataConvField = value;
                this.RaisePropertyChanged("dataConv");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string cupConv {
            get {
                return this.cupConvField;
            }
            set {
                this.cupConvField = value;
                this.RaisePropertyChanged("cupConv");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string cigConv {
            get {
                return this.cigConvField;
            }
            set {
                this.cigConvField = value;
                this.RaisePropertyChanged("cigConv");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string codCommessaConvenzioneConv {
            get {
                return this.codCommessaConvenzioneConvField;
            }
            set {
                this.codCommessaConvenzioneConvField = value;
                this.RaisePropertyChanged("codCommessaConvenzioneConv");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public string numeroCont {
            get {
                return this.numeroContField;
            }
            set {
                this.numeroContField = value;
                this.RaisePropertyChanged("numeroCont");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public string dataCont {
            get {
                return this.dataContField;
            }
            set {
                this.dataContField = value;
                this.RaisePropertyChanged("dataCont");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public string cupCont {
            get {
                return this.cupContField;
            }
            set {
                this.cupContField = value;
                this.RaisePropertyChanged("cupCont");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=33)]
        public string cigCont {
            get {
                return this.cigContField;
            }
            set {
                this.cigContField = value;
                this.RaisePropertyChanged("cigCont");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=34)]
        public string codCommessaConvenzioneCont {
            get {
                return this.codCommessaConvenzioneContField;
            }
            set {
                this.codCommessaConvenzioneContField = value;
                this.RaisePropertyChanged("codCommessaConvenzioneCont");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=35)]
        public AltriDatiGestionaliListObject altriDatiGestionali {
            get {
                return this.altriDatiGestionaliField;
            }
            set {
                this.altriDatiGestionaliField = value;
                this.RaisePropertyChanged("altriDatiGestionali");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProdListObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ProdObject[] listField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public ProdObject[] list {
            get {
                return this.listField;
            }
            set {
                this.listField = value;
                this.RaisePropertyChanged("list");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RestAPISoapChannel : Api.ServiceFatture.RestAPISoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestAPISoapClient : System.ServiceModel.ClientBase<Api.ServiceFatture.RestAPISoap>, Api.ServiceFatture.RestAPISoap {
        
        public RestAPISoapClient() {
        }
        
        public RestAPISoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RestAPISoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestAPISoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestAPISoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string login(string username, string password, string source) {
            return base.Channel.login(username, password, source);
        }
        
        public System.Threading.Tasks.Task<string> loginAsync(string username, string password, string source) {
            return base.Channel.loginAsync(username, password, source);
        }
        
        public string loginCRM(string username, string password, string source) {
            return base.Channel.loginCRM(username, password, source);
        }
        
        public System.Threading.Tasks.Task<string> loginCRMAsync(string username, string password, string source) {
            return base.Channel.loginCRMAsync(username, password, source);
        }
        
        public string checkUser(string username, string password, string txn_id) {
            return base.Channel.checkUser(username, password, txn_id);
        }
        
        public System.Threading.Tasks.Task<string> checkUserAsync(string username, string password, string txn_id) {
            return base.Channel.checkUserAsync(username, password, txn_id);
        }
        
        public string loginSSO(string username, string password, string page) {
            return base.Channel.loginSSO(username, password, page);
        }
        
        public System.Threading.Tasks.Task<string> loginSSOAsync(string username, string password, string page) {
            return base.Channel.loginSSOAsync(username, password, page);
        }
        
        public string changePW(string token, string idMittente, string oldPW, string newPW, string source) {
            return base.Channel.changePW(token, idMittente, oldPW, newPW, source);
        }
        
        public System.Threading.Tasks.Task<string> changePWAsync(string token, string idMittente, string oldPW, string newPW, string source) {
            return base.Channel.changePWAsync(token, idMittente, oldPW, newPW, source);
        }
        
        public string checkToken(string token, string idMittente) {
            return base.Channel.checkToken(token, idMittente);
        }
        
        public System.Threading.Tasks.Task<string> checkTokenAsync(string token, string idMittente) {
            return base.Channel.checkTokenAsync(token, idMittente);
        }
        
        public string creaDocumentoBenzinaio(string token, string idMittente, string idDestinatario, int isPrivato, double importoPagato, string targa, double litri, string modalitaPagamento, string numeroDocumento, object qrCode) {
            return base.Channel.creaDocumentoBenzinaio(token, idMittente, idDestinatario, isPrivato, importoPagato, targa, litri, modalitaPagamento, numeroDocumento, qrCode);
        }
        
        public System.Threading.Tasks.Task<string> creaDocumentoBenzinaioAsync(string token, string idMittente, string idDestinatario, int isPrivato, double importoPagato, string targa, double litri, string modalitaPagamento, string numeroDocumento, object qrCode) {
            return base.Channel.creaDocumentoBenzinaioAsync(token, idMittente, idDestinatario, isPrivato, importoPagato, targa, litri, modalitaPagamento, numeroDocumento, qrCode);
        }
        
        public string creaDocumento(string token, string idMittente, string idDestinatario, int isPrivato, string modalitaPagamento, string causale, string numeroDocumento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode) {
            return base.Channel.creaDocumento(token, idMittente, idDestinatario, isPrivato, modalitaPagamento, causale, numeroDocumento, prodList, qrCode);
        }
        
        public System.Threading.Tasks.Task<string> creaDocumentoAsync(string token, string idMittente, string idDestinatario, int isPrivato, string modalitaPagamento, string causale, string numeroDocumento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode) {
            return base.Channel.creaDocumentoAsync(token, idMittente, idDestinatario, isPrivato, modalitaPagamento, causale, numeroDocumento, prodList, qrCode);
        }
        
        public string creaDocumentoFull(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent) {
            return base.Channel.creaDocumentoFull(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent);
        }
        
        public System.Threading.Tasks.Task<string> creaDocumentoFullAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent) {
            return base.Channel.creaDocumentoFullAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent);
        }
        
        public string creaDocumentoFullTD(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string TipoDocumento) {
            return base.Channel.creaDocumentoFullTD(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, TipoDocumento);
        }
        
        public System.Threading.Tasks.Task<string> creaDocumentoFullTDAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string TipoDocumento) {
            return base.Channel.creaDocumentoFullTDAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, TipoDocumento);
        }
        
        public string creaDocumentoAutFullTD(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string tipoDocumento, string regimeFiscale) {
            return base.Channel.creaDocumentoAutFullTD(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, tipoDocumento, regimeFiscale);
        }
        
        public System.Threading.Tasks.Task<string> creaDocumentoAutFullTDAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string tipoDocumento, string regimeFiscale) {
            return base.Channel.creaDocumentoAutFullTDAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, tipoDocumento, regimeFiscale);
        }
        
        public string creaNotaCreditoFull(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string idFattura) {
            return base.Channel.creaNotaCreditoFull(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, idFattura);
        }
        
        public System.Threading.Tasks.Task<string> creaNotaCreditoFullAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, string idFattura) {
            return base.Channel.creaNotaCreditoFullAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, idFattura);
        }
        
        public string test(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent) {
            return base.Channel.test(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent);
        }
        
        public System.Threading.Tasks.Task<string> testAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent) {
            return base.Channel.testAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent);
        }
        
        public string creaDocumentoFullRound(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, double arrotondamento) {
            return base.Channel.creaDocumentoFullRound(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, arrotondamento);
        }
        
        public System.Threading.Tasks.Task<string> creaDocumentoFullRoundAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, double arrotondamento) {
            return base.Channel.creaDocumentoFullRoundAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, arrotondamento);
        }
        
        public string creaDocumentoFullRoundRit(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, double arrotondamento, double aliquotaRitenuta) {
            return base.Channel.creaDocumentoFullRoundRit(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, arrotondamento, aliquotaRitenuta);
        }
        
        public System.Threading.Tasks.Task<string> creaDocumentoFullRoundRitAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string attachmentName, string attachmentContent, double arrotondamento, double aliquotaRitenuta) {
            return base.Channel.creaDocumentoFullRoundRitAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, arrotondamento, aliquotaRitenuta);
        }
        
        public string creaDocumentoFullRoundAltreRit(
                    string token, 
                    string idMittente, 
                    string idDestinatario, 
                    int isPrivato, 
                    string causale, 
                    string numeroDocumento, 
                    string dataDocumento, 
                    double importoBollo, 
                    Api.ServiceFatture.DatiPagamentoListObject datiPagamento, 
                    Api.ServiceFatture.ProdListObject prodList, 
                    Api.ServiceFatture.QRCodeObject qrCode, 
                    string attachmentName, 
                    string attachmentContent, 
                    double arrotondamento, 
                    double aliquotaRitenuta, 
                    string applicaAltreRitenute) {
            return base.Channel.creaDocumentoFullRoundAltreRit(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, arrotondamento, aliquotaRitenuta, applicaAltreRitenute);
        }
        
        public System.Threading.Tasks.Task<string> creaDocumentoFullRoundAltreRitAsync(
                    string token, 
                    string idMittente, 
                    string idDestinatario, 
                    int isPrivato, 
                    string causale, 
                    string numeroDocumento, 
                    string dataDocumento, 
                    double importoBollo, 
                    Api.ServiceFatture.DatiPagamentoListObject datiPagamento, 
                    Api.ServiceFatture.ProdListObject prodList, 
                    Api.ServiceFatture.QRCodeObject qrCode, 
                    string attachmentName, 
                    string attachmentContent, 
                    double arrotondamento, 
                    double aliquotaRitenuta, 
                    string applicaAltreRitenute) {
            return base.Channel.creaDocumentoFullRoundAltreRitAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, attachmentName, attachmentContent, arrotondamento, aliquotaRitenuta, applicaAltreRitenute);
        }
        
        public string creaNotaCreditoParziale(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string idFatturaRif, string lineeRif, string retFileType) {
            return base.Channel.creaNotaCreditoParziale(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, idFatturaRif, lineeRif, retFileType);
        }
        
        public System.Threading.Tasks.Task<string> creaNotaCreditoParzialeAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string idFatturaRif, string lineeRif, string retFileType) {
            return base.Channel.creaNotaCreditoParzialeAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, idFatturaRif, lineeRif, retFileType);
        }
        
        public string creaNotaCredito(string token, string idMittente, string idFattura) {
            return base.Channel.creaNotaCredito(token, idMittente, idFattura);
        }
        
        public System.Threading.Tasks.Task<string> creaNotaCreditoAsync(string token, string idMittente, string idFattura) {
            return base.Channel.creaNotaCreditoAsync(token, idMittente, idFattura);
        }
        
        public string creaNotaCreditoNumero(string token, string idMittente, string idFattura, string numeroDocumento) {
            return base.Channel.creaNotaCreditoNumero(token, idMittente, idFattura, numeroDocumento);
        }
        
        public System.Threading.Tasks.Task<string> creaNotaCreditoNumeroAsync(string token, string idMittente, string idFattura, string numeroDocumento) {
            return base.Channel.creaNotaCreditoNumeroAsync(token, idMittente, idFattura, numeroDocumento);
        }
        
        public string creaNotaCreditoNumeroData(string token, string idMittente, string idFatturaRif, string numeroDocumento, string dataDocumento, string causale) {
            return base.Channel.creaNotaCreditoNumeroData(token, idMittente, idFatturaRif, numeroDocumento, dataDocumento, causale);
        }
        
        public System.Threading.Tasks.Task<string> creaNotaCreditoNumeroDataAsync(string token, string idMittente, string idFatturaRif, string numeroDocumento, string dataDocumento, string causale) {
            return base.Channel.creaNotaCreditoNumeroDataAsync(token, idMittente, idFatturaRif, numeroDocumento, dataDocumento, causale);
        }
        
        public string getUserData(string token, string idMittente, string dataUserId) {
            return base.Channel.getUserData(token, idMittente, dataUserId);
        }
        
        public System.Threading.Tasks.Task<string> getUserDataAsync(string token, string idMittente, string dataUserId) {
            return base.Channel.getUserDataAsync(token, idMittente, dataUserId);
        }
        
        public string getUserDocuments(string token, string idMittente, string dataUserId, string refYear, string refMonth) {
            return base.Channel.getUserDocuments(token, idMittente, dataUserId, refYear, refMonth);
        }
        
        public System.Threading.Tasks.Task<string> getUserDocumentsAsync(string token, string idMittente, string dataUserId, string refYear, string refMonth) {
            return base.Channel.getUserDocumentsAsync(token, idMittente, dataUserId, refYear, refMonth);
        }
        
        public string getUserStatusDocuments(string token, string idMittente, string dataUserId, string idDocumentList) {
            return base.Channel.getUserStatusDocuments(token, idMittente, dataUserId, idDocumentList);
        }
        
        public System.Threading.Tasks.Task<string> getUserStatusDocumentsAsync(string token, string idMittente, string dataUserId, string idDocumentList) {
            return base.Channel.getUserStatusDocumentsAsync(token, idMittente, dataUserId, idDocumentList);
        }
        
        public string getSubUser(string token, string idMittente, string dataUserId) {
            return base.Channel.getSubUser(token, idMittente, dataUserId);
        }
        
        public System.Threading.Tasks.Task<string> getSubUserAsync(string token, string idMittente, string dataUserId) {
            return base.Channel.getSubUserAsync(token, idMittente, dataUserId);
        }
        
        public string getSubUserCRM(string token, string idMittente, string dataUserId) {
            return base.Channel.getSubUserCRM(token, idMittente, dataUserId);
        }
        
        public System.Threading.Tasks.Task<string> getSubUserCRMAsync(string token, string idMittente, string dataUserId) {
            return base.Channel.getSubUserCRMAsync(token, idMittente, dataUserId);
        }
        
        public string getUsersDomain(string token, string idMittente) {
            return base.Channel.getUsersDomain(token, idMittente);
        }
        
        public System.Threading.Tasks.Task<string> getUsersDomainAsync(string token, string idMittente) {
            return base.Channel.getUsersDomainAsync(token, idMittente);
        }
        
        public string deleteDocumentDomain(string token, string idMittente, string dataUserId, int idDocumento) {
            return base.Channel.deleteDocumentDomain(token, idMittente, dataUserId, idDocumento);
        }
        
        public System.Threading.Tasks.Task<string> deleteDocumentDomainAsync(string token, string idMittente, string dataUserId, int idDocumento) {
            return base.Channel.deleteDocumentDomainAsync(token, idMittente, dataUserId, idDocumento);
        }
        
        public string getUsersDomainDocCounter(string token, string idMittente) {
            return base.Channel.getUsersDomainDocCounter(token, idMittente);
        }
        
        public System.Threading.Tasks.Task<string> getUsersDomainDocCounterAsync(string token, string idMittente) {
            return base.Channel.getUsersDomainDocCounterAsync(token, idMittente);
        }
        
        public string getUsersDomainCRM(string token, string idMittente) {
            return base.Channel.getUsersDomainCRM(token, idMittente);
        }
        
        public System.Threading.Tasks.Task<string> getUsersDomainCRMAsync(string token, string idMittente) {
            return base.Channel.getUsersDomainCRMAsync(token, idMittente);
        }
        
        public string getUsersMultiIVADomain(string token, string idMittente) {
            return base.Channel.getUsersMultiIVADomain(token, idMittente);
        }
        
        public System.Threading.Tasks.Task<string> getUsersMultiIVADomainAsync(string token, string idMittente) {
            return base.Channel.getUsersMultiIVADomainAsync(token, idMittente);
        }
        
        public string getUserDocument(string token, string idMittente, string dataUserId, string idDocumento) {
            return base.Channel.getUserDocument(token, idMittente, dataUserId, idDocumento);
        }
        
        public System.Threading.Tasks.Task<string> getUserDocumentAsync(string token, string idMittente, string dataUserId, string idDocumento) {
            return base.Channel.getUserDocumentAsync(token, idMittente, dataUserId, idDocumento);
        }
        
        public string getUserDocumentId(string token, string idMittente, string dataUserId, string tipoDocumento, string numeroDocumento, string annoDocumento) {
            return base.Channel.getUserDocumentId(token, idMittente, dataUserId, tipoDocumento, numeroDocumento, annoDocumento);
        }
        
        public System.Threading.Tasks.Task<string> getUserDocumentIdAsync(string token, string idMittente, string dataUserId, string tipoDocumento, string numeroDocumento, string annoDocumento) {
            return base.Channel.getUserDocumentIdAsync(token, idMittente, dataUserId, tipoDocumento, numeroDocumento, annoDocumento);
        }
        
        public string getUserXML(string token, string idMittente, string dataUserId, string idDocumento) {
            return base.Channel.getUserXML(token, idMittente, dataUserId, idDocumento);
        }
        
        public System.Threading.Tasks.Task<string> getUserXMLAsync(string token, string idMittente, string dataUserId, string idDocumento) {
            return base.Channel.getUserXMLAsync(token, idMittente, dataUserId, idDocumento);
        }
        
        public string getUserDocumentsFilter(string token, string idMittente, string dataUserId, string refYear, string refMonth, string filterKey, string filterValue) {
            return base.Channel.getUserDocumentsFilter(token, idMittente, dataUserId, refYear, refMonth, filterKey, filterValue);
        }
        
        public System.Threading.Tasks.Task<string> getUserDocumentsFilterAsync(string token, string idMittente, string dataUserId, string refYear, string refMonth, string filterKey, string filterValue) {
            return base.Channel.getUserDocumentsFilterAsync(token, idMittente, dataUserId, refYear, refMonth, filterKey, filterValue);
        }
        
        public string getUserDocumentsFilterCreationDate(string token, string idMittente, string dataUserId, string refYear, string refMonth, string filterKey, string filterValue) {
            return base.Channel.getUserDocumentsFilterCreationDate(token, idMittente, dataUserId, refYear, refMonth, filterKey, filterValue);
        }
        
        public System.Threading.Tasks.Task<string> getUserDocumentsFilterCreationDateAsync(string token, string idMittente, string dataUserId, string refYear, string refMonth, string filterKey, string filterValue) {
            return base.Channel.getUserDocumentsFilterCreationDateAsync(token, idMittente, dataUserId, refYear, refMonth, filterKey, filterValue);
        }
        
        public string getUserDocumentsDomainFilter(string token, string idMittente, string refYear, string refMonth, string filterKey, string filterValue) {
            return base.Channel.getUserDocumentsDomainFilter(token, idMittente, refYear, refMonth, filterKey, filterValue);
        }
        
        public System.Threading.Tasks.Task<string> getUserDocumentsDomainFilterAsync(string token, string idMittente, string refYear, string refMonth, string filterKey, string filterValue) {
            return base.Channel.getUserDocumentsDomainFilterAsync(token, idMittente, refYear, refMonth, filterKey, filterValue);
        }
        
        public string getUserDocumentsDomainFilterCreationDate(string token, string idMittente, string refYear, string refMonth, string filterKey, string filterValue) {
            return base.Channel.getUserDocumentsDomainFilterCreationDate(token, idMittente, refYear, refMonth, filterKey, filterValue);
        }
        
        public System.Threading.Tasks.Task<string> getUserDocumentsDomainFilterCreationDateAsync(string token, string idMittente, string refYear, string refMonth, string filterKey, string filterValue) {
            return base.Channel.getUserDocumentsDomainFilterCreationDateAsync(token, idMittente, refYear, refMonth, filterKey, filterValue);
        }
        
        public string calcolaTotaleDocumento(string token, string idMittente, string idDestinatario, int isPrivato, object prodList) {
            return base.Channel.calcolaTotaleDocumento(token, idMittente, idDestinatario, isPrivato, prodList);
        }
        
        public System.Threading.Tasks.Task<string> calcolaTotaleDocumentoAsync(string token, string idMittente, string idDestinatario, int isPrivato, object prodList) {
            return base.Channel.calcolaTotaleDocumentoAsync(token, idMittente, idDestinatario, isPrivato, prodList);
        }
        
        public string getEsitoDocument(string token, string idMittente, string idFattura) {
            return base.Channel.getEsitoDocument(token, idMittente, idFattura);
        }
        
        public System.Threading.Tasks.Task<string> getEsitoDocumentAsync(string token, string idMittente, string idFattura) {
            return base.Channel.getEsitoDocumentAsync(token, idMittente, idFattura);
        }
        
        public string getEsitoDocumentXML(string token, string idMittente, string idFattura) {
            return base.Channel.getEsitoDocumentXML(token, idMittente, idFattura);
        }
        
        public System.Threading.Tasks.Task<string> getEsitoDocumentXMLAsync(string token, string idMittente, string idFattura) {
            return base.Channel.getEsitoDocumentXMLAsync(token, idMittente, idFattura);
        }
        
        public string sendXML(string token, string idMittente, string dataUserId, string base64File, string nomeFile) {
            return base.Channel.sendXML(token, idMittente, dataUserId, base64File, nomeFile);
        }
        
        public System.Threading.Tasks.Task<string> sendXMLAsync(string token, string idMittente, string dataUserId, string base64File, string nomeFile) {
            return base.Channel.sendXMLAsync(token, idMittente, dataUserId, base64File, nomeFile);
        }
        
        public string uploadXML(string token, string idMittente, string dataUserId, string base64File, string nomeFile, string tipoFile, string IdentificativoSdI) {
            return base.Channel.uploadXML(token, idMittente, dataUserId, base64File, nomeFile, tipoFile, IdentificativoSdI);
        }
        
        public System.Threading.Tasks.Task<string> uploadXMLAsync(string token, string idMittente, string dataUserId, string base64File, string nomeFile, string tipoFile, string IdentificativoSdI) {
            return base.Channel.uploadXMLAsync(token, idMittente, dataUserId, base64File, nomeFile, tipoFile, IdentificativoSdI);
        }
        
        public string registerEndPoint(string token, string idMittente, string endPoint) {
            return base.Channel.registerEndPoint(token, idMittente, endPoint);
        }
        
        public System.Threading.Tasks.Task<string> registerEndPointAsync(string token, string idMittente, string endPoint) {
            return base.Channel.registerEndPointAsync(token, idMittente, endPoint);
        }
        
        public string deregisterEndPoint(string token, string idMittente) {
            return base.Channel.deregisterEndPoint(token, idMittente);
        }
        
        public System.Threading.Tasks.Task<string> deregisterEndPointAsync(string token, string idMittente) {
            return base.Channel.deregisterEndPointAsync(token, idMittente);
        }
        
        public string signFile(string token, string idMittente, string base64File) {
            return base.Channel.signFile(token, idMittente, base64File);
        }
        
        public System.Threading.Tasks.Task<string> signFileAsync(string token, string idMittente, string base64File) {
            return base.Channel.signFileAsync(token, idMittente, base64File);
        }
        
        public string creaAccount(string token, string idMittente, string email, string isPersonaFisica, int isMultiIVA, string nome, string cognome, string denominazione, string partitaIVA, string codiceFiscale, string sendMailType, string retEmail, int numFatture) {
            return base.Channel.creaAccount(token, idMittente, email, isPersonaFisica, isMultiIVA, nome, cognome, denominazione, partitaIVA, codiceFiscale, sendMailType, retEmail, numFatture);
        }
        
        public System.Threading.Tasks.Task<string> creaAccountAsync(string token, string idMittente, string email, string isPersonaFisica, int isMultiIVA, string nome, string cognome, string denominazione, string partitaIVA, string codiceFiscale, string sendMailType, string retEmail, int numFatture) {
            return base.Channel.creaAccountAsync(token, idMittente, email, isPersonaFisica, isMultiIVA, nome, cognome, denominazione, partitaIVA, codiceFiscale, sendMailType, retEmail, numFatture);
        }
        
        public string creaAccountCRM(string token, string idMittente, string partitaIVA, string email, string nome, string cognome) {
            return base.Channel.creaAccountCRM(token, idMittente, partitaIVA, email, nome, cognome);
        }
        
        public System.Threading.Tasks.Task<string> creaAccountCRMAsync(string token, string idMittente, string partitaIVA, string email, string nome, string cognome) {
            return base.Channel.creaAccountCRMAsync(token, idMittente, partitaIVA, email, nome, cognome);
        }
        
        public string register(
                    string token, 
                    string nome, 
                    string cognome, 
                    string denominazione, 
                    string email, 
                    string partitaIVA, 
                    string codiceFiscale, 
                    string isPersonaFisica, 
                    string idPaese, 
                    string provincia, 
                    string comune, 
                    string cap, 
                    string indirizzo, 
                    string password, 
                    string AdE_CodiceFiscale, 
                    string AdE_PIN, 
                    string AdE_Password, 
                    string AdE_TipoIncarico, 
                    string sendMailType, 
                    string discriminator) {
            return base.Channel.register(token, nome, cognome, denominazione, email, partitaIVA, codiceFiscale, isPersonaFisica, idPaese, provincia, comune, cap, indirizzo, password, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico, sendMailType, discriminator);
        }
        
        public System.Threading.Tasks.Task<string> registerAsync(
                    string token, 
                    string nome, 
                    string cognome, 
                    string denominazione, 
                    string email, 
                    string partitaIVA, 
                    string codiceFiscale, 
                    string isPersonaFisica, 
                    string idPaese, 
                    string provincia, 
                    string comune, 
                    string cap, 
                    string indirizzo, 
                    string password, 
                    string AdE_CodiceFiscale, 
                    string AdE_PIN, 
                    string AdE_Password, 
                    string AdE_TipoIncarico, 
                    string sendMailType, 
                    string discriminator) {
            return base.Channel.registerAsync(token, nome, cognome, denominazione, email, partitaIVA, codiceFiscale, isPersonaFisica, idPaese, provincia, comune, cap, indirizzo, password, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico, sendMailType, discriminator);
        }
        
        public string registerUpdate(string token, string idMittente, string nome, string cognome, string denominazione, string codiceFiscale, string isPersonaFisica, string provincia, string comune, string cap, string indirizzo, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico) {
            return base.Channel.registerUpdate(token, idMittente, nome, cognome, denominazione, codiceFiscale, isPersonaFisica, provincia, comune, cap, indirizzo, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico);
        }
        
        public System.Threading.Tasks.Task<string> registerUpdateAsync(string token, string idMittente, string nome, string cognome, string denominazione, string codiceFiscale, string isPersonaFisica, string provincia, string comune, string cap, string indirizzo, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico) {
            return base.Channel.registerUpdateAsync(token, idMittente, nome, cognome, denominazione, codiceFiscale, isPersonaFisica, provincia, comune, cap, indirizzo, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico);
        }
        
        public string registerChangePassword(string token, string idMittente, string currentPassword, string newPassword) {
            return base.Channel.registerChangePassword(token, idMittente, currentPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<string> registerChangePasswordAsync(string token, string idMittente, string currentPassword, string newPassword) {
            return base.Channel.registerChangePasswordAsync(token, idMittente, currentPassword, newPassword);
        }
        
        public object resetPassword(string token, string email) {
            return base.Channel.resetPassword(token, email);
        }
        
        public System.Threading.Tasks.Task<object> resetPasswordAsync(string token, string email) {
            return base.Channel.resetPasswordAsync(token, email);
        }
        
        public string modificaAccount(string token, string idMittente, string email, string isPersonaFisica, int isMultiIVA, string nome, string cognome, string denominazione, string partitaIVA, string codiceFiscale) {
            return base.Channel.modificaAccount(token, idMittente, email, isPersonaFisica, isMultiIVA, nome, cognome, denominazione, partitaIVA, codiceFiscale);
        }
        
        public System.Threading.Tasks.Task<string> modificaAccountAsync(string token, string idMittente, string email, string isPersonaFisica, int isMultiIVA, string nome, string cognome, string denominazione, string partitaIVA, string codiceFiscale) {
            return base.Channel.modificaAccountAsync(token, idMittente, email, isPersonaFisica, isMultiIVA, nome, cognome, denominazione, partitaIVA, codiceFiscale);
        }
        
        public string enableAccount(string token, string idMittente, string dataUserId) {
            return base.Channel.enableAccount(token, idMittente, dataUserId);
        }
        
        public System.Threading.Tasks.Task<string> enableAccountAsync(string token, string idMittente, string dataUserId) {
            return base.Channel.enableAccountAsync(token, idMittente, dataUserId);
        }
        
        public string increaseNumInvoice(string token, string idMittente, string dataUserId, int numeroFatture) {
            return base.Channel.increaseNumInvoice(token, idMittente, dataUserId, numeroFatture);
        }
        
        public System.Threading.Tasks.Task<string> increaseNumInvoiceAsync(string token, string idMittente, string dataUserId, int numeroFatture) {
            return base.Channel.increaseNumInvoiceAsync(token, idMittente, dataUserId, numeroFatture);
        }
        
        public string decreaseNumInvoice(string token, string idMittente, string dataUserId, int numeroFatture) {
            return base.Channel.decreaseNumInvoice(token, idMittente, dataUserId, numeroFatture);
        }
        
        public System.Threading.Tasks.Task<string> decreaseNumInvoiceAsync(string token, string idMittente, string dataUserId, int numeroFatture) {
            return base.Channel.decreaseNumInvoiceAsync(token, idMittente, dataUserId, numeroFatture);
        }
        
        public string updateAnagData(string token, string idMittente, string dataUserId, string nome, string cognome, string denominazione, string email, string numeroFatture, string dataRinnovo, int contrattoAnnuale, string Dominio) {
            return base.Channel.updateAnagData(token, idMittente, dataUserId, nome, cognome, denominazione, email, numeroFatture, dataRinnovo, contrattoAnnuale, Dominio);
        }
        
        public System.Threading.Tasks.Task<string> updateAnagDataAsync(string token, string idMittente, string dataUserId, string nome, string cognome, string denominazione, string email, string numeroFatture, string dataRinnovo, int contrattoAnnuale, string Dominio) {
            return base.Channel.updateAnagDataAsync(token, idMittente, dataUserId, nome, cognome, denominazione, email, numeroFatture, dataRinnovo, contrattoAnnuale, Dominio);
        }
        
        public string buyPlan(string token, string idMittente, string partitaIVA, string codicePiano) {
            return base.Channel.buyPlan(token, idMittente, partitaIVA, codicePiano);
        }
        
        public System.Threading.Tasks.Task<string> buyPlanAsync(string token, string idMittente, string partitaIVA, string codicePiano) {
            return base.Channel.buyPlanAsync(token, idMittente, partitaIVA, codicePiano);
        }
        
        public string disableAccount(string token, string idMittente, string dataUserId) {
            return base.Channel.disableAccount(token, idMittente, dataUserId);
        }
        
        public System.Threading.Tasks.Task<string> disableAccountAsync(string token, string idMittente, string dataUserId) {
            return base.Channel.disableAccountAsync(token, idMittente, dataUserId);
        }
        
        public string creaPreviewDocumento(string token, string idMittente, string idDestinatario, int isPrivato, string modalitaPagamento, string causale, string numeroDocumento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType) {
            return base.Channel.creaPreviewDocumento(token, idMittente, idDestinatario, isPrivato, modalitaPagamento, causale, numeroDocumento, prodList, qrCode, retFileType);
        }
        
        public System.Threading.Tasks.Task<string> creaPreviewDocumentoAsync(string token, string idMittente, string idDestinatario, int isPrivato, string modalitaPagamento, string causale, string numeroDocumento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType) {
            return base.Channel.creaPreviewDocumentoAsync(token, idMittente, idDestinatario, isPrivato, modalitaPagamento, causale, numeroDocumento, prodList, qrCode, retFileType);
        }
        
        public string creaPreviewDocumentoFull(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType) {
            return base.Channel.creaPreviewDocumentoFull(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType);
        }
        
        public System.Threading.Tasks.Task<string> creaPreviewDocumentoFullAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType) {
            return base.Channel.creaPreviewDocumentoFullAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType);
        }
        
        public string creaPreviewDocumentoFullTD(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string TipoDocumento) {
            return base.Channel.creaPreviewDocumentoFullTD(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType, TipoDocumento);
        }
        
        public System.Threading.Tasks.Task<string> creaPreviewDocumentoFullTDAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string TipoDocumento) {
            return base.Channel.creaPreviewDocumentoFullTDAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType, TipoDocumento);
        }
        
        public string creaPreviewDocumentoAutFullTD(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string tipoDocumento, string regimeFiscale) {
            return base.Channel.creaPreviewDocumentoAutFullTD(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType, tipoDocumento, regimeFiscale);
        }
        
        public System.Threading.Tasks.Task<string> creaPreviewDocumentoAutFullTDAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string tipoDocumento, string regimeFiscale) {
            return base.Channel.creaPreviewDocumentoAutFullTDAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType, tipoDocumento, regimeFiscale);
        }
        
        public string predisponiPreviewDDT(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string tipoDDT) {
            return base.Channel.predisponiPreviewDDT(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType, tipoDDT);
        }
        
        public System.Threading.Tasks.Task<string> predisponiPreviewDDTAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, string tipoDDT) {
            return base.Channel.predisponiPreviewDDTAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType, tipoDDT);
        }
        
        public string creaPreviewDocumentoFullRound(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, double arrotondamento) {
            return base.Channel.creaPreviewDocumentoFullRound(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType, arrotondamento);
        }
        
        public System.Threading.Tasks.Task<string> creaPreviewDocumentoFullRoundAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, double arrotondamento) {
            return base.Channel.creaPreviewDocumentoFullRoundAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType, arrotondamento);
        }
        
        public string creaPreviewDocumentoFullRoundRit(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, double arrotondamento, double aliquotaRitenuta) {
            return base.Channel.creaPreviewDocumentoFullRoundRit(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType, arrotondamento, aliquotaRitenuta);
        }
        
        public System.Threading.Tasks.Task<string> creaPreviewDocumentoFullRoundRitAsync(string token, string idMittente, string idDestinatario, int isPrivato, string causale, string numeroDocumento, string dataDocumento, double importoBollo, Api.ServiceFatture.DatiPagamentoListObject datiPagamento, Api.ServiceFatture.ProdListObject prodList, Api.ServiceFatture.QRCodeObject qrCode, string retFileType, double arrotondamento, double aliquotaRitenuta) {
            return base.Channel.creaPreviewDocumentoFullRoundRitAsync(token, idMittente, idDestinatario, isPrivato, causale, numeroDocumento, dataDocumento, importoBollo, datiPagamento, prodList, qrCode, retFileType, arrotondamento, aliquotaRitenuta);
        }
        
        public string getPreviewDocumento(string token, string idMittente, int idDocumento, string retFileType) {
            return base.Channel.getPreviewDocumento(token, idMittente, idDocumento, retFileType);
        }
        
        public System.Threading.Tasks.Task<string> getPreviewDocumentoAsync(string token, string idMittente, int idDocumento, string retFileType) {
            return base.Channel.getPreviewDocumentoAsync(token, idMittente, idDocumento, retFileType);
        }
        
        public string sendDocumento(string token, string idMittente, int idDocumento) {
            return base.Channel.sendDocumento(token, idMittente, idDocumento);
        }
        
        public System.Threading.Tasks.Task<string> sendDocumentoAsync(string token, string idMittente, int idDocumento) {
            return base.Channel.sendDocumentoAsync(token, idMittente, idDocumento);
        }
        
        public string deleteDocumento(string token, string idMittente, int idDocumento) {
            return base.Channel.deleteDocumento(token, idMittente, idDocumento);
        }
        
        public System.Threading.Tasks.Task<string> deleteDocumentoAsync(string token, string idMittente, int idDocumento) {
            return base.Channel.deleteDocumentoAsync(token, idMittente, idDocumento);
        }
        
        public string payInvoice(string token, string idMittente, string dataUserId, int idDocumento) {
            return base.Channel.payInvoice(token, idMittente, dataUserId, idDocumento);
        }
        
        public System.Threading.Tasks.Task<string> payInvoiceAsync(string token, string idMittente, string dataUserId, int idDocumento) {
            return base.Channel.payInvoiceAsync(token, idMittente, dataUserId, idDocumento);
        }
        
        public string cancelPayInvoice(string token, string idMittente, string dataUserId, int idDocumento) {
            return base.Channel.cancelPayInvoice(token, idMittente, dataUserId, idDocumento);
        }
        
        public System.Threading.Tasks.Task<string> cancelPayInvoiceAsync(string token, string idMittente, string dataUserId, int idDocumento) {
            return base.Channel.cancelPayInvoiceAsync(token, idMittente, dataUserId, idDocumento);
        }
        
        public string getRubrica(string token, string idMittente, string dataUserId, string searchText) {
            return base.Channel.getRubrica(token, idMittente, dataUserId, searchText);
        }
        
        public System.Threading.Tasks.Task<string> getRubricaAsync(string token, string idMittente, string dataUserId, string searchText) {
            return base.Channel.getRubricaAsync(token, idMittente, dataUserId, searchText);
        }
        
        public string getCounter(string token, string idMittente, string refYear) {
            return base.Channel.getCounter(token, idMittente, refYear);
        }
        
        public System.Threading.Tasks.Task<string> getCounterAsync(string token, string idMittente, string refYear) {
            return base.Channel.getCounterAsync(token, idMittente, refYear);
        }
        
        public string getUserCounter(string token, string idMittente, string dataUserId, string refYear) {
            return base.Channel.getUserCounter(token, idMittente, dataUserId, refYear);
        }
        
        public System.Threading.Tasks.Task<string> getUserCounterAsync(string token, string idMittente, string dataUserId, string refYear) {
            return base.Channel.getUserCounterAsync(token, idMittente, dataUserId, refYear);
        }
        
        public string getDashboard(string token, string idMittente, string dataUserId, string refYear) {
            return base.Channel.getDashboard(token, idMittente, dataUserId, refYear);
        }
        
        public System.Threading.Tasks.Task<string> getDashboardAsync(string token, string idMittente, string dataUserId, string refYear) {
            return base.Channel.getDashboardAsync(token, idMittente, dataUserId, refYear);
        }
        
        public string addCliente(
                    string token, 
                    string idMittente, 
                    string idPaese, 
                    string idCodice, 
                    string codiceFiscale, 
                    string checkPersonaFisica, 
                    string denominazione, 
                    string titolo, 
                    string nome, 
                    string cognome, 
                    string codEORI, 
                    string indirizzo, 
                    string comune, 
                    string cap, 
                    string provincia, 
                    string nazione, 
                    string pecDestinatario, 
                    string soggettoPrivato, 
                    string codiceDestinatario, 
                    string telefono, 
                    string fax, 
                    string referente, 
                    string referentePartitaIva) {
            return base.Channel.addCliente(token, idMittente, idPaese, idCodice, codiceFiscale, checkPersonaFisica, denominazione, titolo, nome, cognome, codEORI, indirizzo, comune, cap, provincia, nazione, pecDestinatario, soggettoPrivato, codiceDestinatario, telefono, fax, referente, referentePartitaIva);
        }
        
        public System.Threading.Tasks.Task<string> addClienteAsync(
                    string token, 
                    string idMittente, 
                    string idPaese, 
                    string idCodice, 
                    string codiceFiscale, 
                    string checkPersonaFisica, 
                    string denominazione, 
                    string titolo, 
                    string nome, 
                    string cognome, 
                    string codEORI, 
                    string indirizzo, 
                    string comune, 
                    string cap, 
                    string provincia, 
                    string nazione, 
                    string pecDestinatario, 
                    string soggettoPrivato, 
                    string codiceDestinatario, 
                    string telefono, 
                    string fax, 
                    string referente, 
                    string referentePartitaIva) {
            return base.Channel.addClienteAsync(token, idMittente, idPaese, idCodice, codiceFiscale, checkPersonaFisica, denominazione, titolo, nome, cognome, codEORI, indirizzo, comune, cap, provincia, nazione, pecDestinatario, soggettoPrivato, codiceDestinatario, telefono, fax, referente, referentePartitaIva);
        }
        
        public string updCliente(
                    string token, 
                    string idMittente, 
                    int idCliente, 
                    string idPaese, 
                    string idCodice, 
                    string codiceFiscale, 
                    string checkPersonaFisica, 
                    string denominazione, 
                    string titolo, 
                    string nome, 
                    string cognome, 
                    string codEORI, 
                    string indirizzo, 
                    string comune, 
                    string cap, 
                    string provincia, 
                    string nazione, 
                    string pecDestinatario, 
                    string soggettoPrivato, 
                    string codiceDestinatario, 
                    string telefono, 
                    string fax, 
                    string referente, 
                    string referentePartitaIva) {
            return base.Channel.updCliente(token, idMittente, idCliente, idPaese, idCodice, codiceFiscale, checkPersonaFisica, denominazione, titolo, nome, cognome, codEORI, indirizzo, comune, cap, provincia, nazione, pecDestinatario, soggettoPrivato, codiceDestinatario, telefono, fax, referente, referentePartitaIva);
        }
        
        public System.Threading.Tasks.Task<string> updClienteAsync(
                    string token, 
                    string idMittente, 
                    int idCliente, 
                    string idPaese, 
                    string idCodice, 
                    string codiceFiscale, 
                    string checkPersonaFisica, 
                    string denominazione, 
                    string titolo, 
                    string nome, 
                    string cognome, 
                    string codEORI, 
                    string indirizzo, 
                    string comune, 
                    string cap, 
                    string provincia, 
                    string nazione, 
                    string pecDestinatario, 
                    string soggettoPrivato, 
                    string codiceDestinatario, 
                    string telefono, 
                    string fax, 
                    string referente, 
                    string referentePartitaIva) {
            return base.Channel.updClienteAsync(token, idMittente, idCliente, idPaese, idCodice, codiceFiscale, checkPersonaFisica, denominazione, titolo, nome, cognome, codEORI, indirizzo, comune, cap, provincia, nazione, pecDestinatario, soggettoPrivato, codiceDestinatario, telefono, fax, referente, referentePartitaIva);
        }
        
        public string delCliente(string token, string idMittente, int idCliente) {
            return base.Channel.delCliente(token, idMittente, idCliente);
        }
        
        public System.Threading.Tasks.Task<string> delClienteAsync(string token, string idMittente, int idCliente) {
            return base.Channel.delClienteAsync(token, idMittente, idCliente);
        }
        
        public string getClienti(string token, string idMittente, string dataUserId, string searchText) {
            return base.Channel.getClienti(token, idMittente, dataUserId, searchText);
        }
        
        public System.Threading.Tasks.Task<string> getClientiAsync(string token, string idMittente, string dataUserId, string searchText) {
            return base.Channel.getClientiAsync(token, idMittente, dataUserId, searchText);
        }
        
        public string getCliente(string token, string idMittente, int idCliente) {
            return base.Channel.getCliente(token, idMittente, idCliente);
        }
        
        public System.Threading.Tasks.Task<string> getClienteAsync(string token, string idMittente, int idCliente) {
            return base.Channel.getClienteAsync(token, idMittente, idCliente);
        }
        
        public string addProdotto(string token, string idMittente, string codice, string denominazione, string um, string descrizione, decimal prezzounitario, decimal aliquotaiva) {
            return base.Channel.addProdotto(token, idMittente, codice, denominazione, um, descrizione, prezzounitario, aliquotaiva);
        }
        
        public System.Threading.Tasks.Task<string> addProdottoAsync(string token, string idMittente, string codice, string denominazione, string um, string descrizione, decimal prezzounitario, decimal aliquotaiva) {
            return base.Channel.addProdottoAsync(token, idMittente, codice, denominazione, um, descrizione, prezzounitario, aliquotaiva);
        }
        
        public string updProdotto(string token, string idMittente, int idProdotto, string codice, string denominazione, string um, string descrizione, string prezzounitario) {
            return base.Channel.updProdotto(token, idMittente, idProdotto, codice, denominazione, um, descrizione, prezzounitario);
        }
        
        public System.Threading.Tasks.Task<string> updProdottoAsync(string token, string idMittente, int idProdotto, string codice, string denominazione, string um, string descrizione, string prezzounitario) {
            return base.Channel.updProdottoAsync(token, idMittente, idProdotto, codice, denominazione, um, descrizione, prezzounitario);
        }
        
        public string delProdotto(string token, string idMittente, int idProdotto) {
            return base.Channel.delProdotto(token, idMittente, idProdotto);
        }
        
        public System.Threading.Tasks.Task<string> delProdottoAsync(string token, string idMittente, int idProdotto) {
            return base.Channel.delProdottoAsync(token, idMittente, idProdotto);
        }
        
        public string getLastProgDoc(string token, string idMittente, string dataUserId, string tipoDocumento) {
            return base.Channel.getLastProgDoc(token, idMittente, dataUserId, tipoDocumento);
        }
        
        public System.Threading.Tasks.Task<string> getLastProgDocAsync(string token, string idMittente, string dataUserId, string tipoDocumento) {
            return base.Channel.getLastProgDocAsync(token, idMittente, dataUserId, tipoDocumento);
        }
        
        public string getProdotti(string token, string idMittente, string dataUserId, string searchText) {
            return base.Channel.getProdotti(token, idMittente, dataUserId, searchText);
        }
        
        public System.Threading.Tasks.Task<string> getProdottiAsync(string token, string idMittente, string dataUserId, string searchText) {
            return base.Channel.getProdottiAsync(token, idMittente, dataUserId, searchText);
        }
        
        public string getMetodiPagamentoUtente(string token, string idMittente) {
            return base.Channel.getMetodiPagamentoUtente(token, idMittente);
        }
        
        public System.Threading.Tasks.Task<string> getMetodiPagamentoUtenteAsync(string token, string idMittente) {
            return base.Channel.getMetodiPagamentoUtenteAsync(token, idMittente);
        }
        
        public string getUserDocumentDetail(string token, string idMittente, string dataUserId, string idDocumento) {
            return base.Channel.getUserDocumentDetail(token, idMittente, dataUserId, idDocumento);
        }
        
        public System.Threading.Tasks.Task<string> getUserDocumentDetailAsync(string token, string idMittente, string dataUserId, string idDocumento) {
            return base.Channel.getUserDocumentDetailAsync(token, idMittente, dataUserId, idDocumento);
        }
        
        public string getFileEsito(string token, string idMittente, string idNotifica) {
            return base.Channel.getFileEsito(token, idMittente, idNotifica);
        }
        
        public System.Threading.Tasks.Task<string> getFileEsitoAsync(string token, string idMittente, string idNotifica) {
            return base.Channel.getFileEsitoAsync(token, idMittente, idNotifica);
        }
        
        public string getAliquoteIVA(string token, string idMittente) {
            return base.Channel.getAliquoteIVA(token, idMittente);
        }
        
        public System.Threading.Tasks.Task<string> getAliquoteIVAAsync(string token, string idMittente) {
            return base.Channel.getAliquoteIVAAsync(token, idMittente);
        }
        
        public string getCustomerInfo(string token, string idMittente, string dataUserId) {
            return base.Channel.getCustomerInfo(token, idMittente, dataUserId);
        }
        
        public System.Threading.Tasks.Task<string> getCustomerInfoAsync(string token, string idMittente, string dataUserId) {
            return base.Channel.getCustomerInfoAsync(token, idMittente, dataUserId);
        }
        
        public string getMaxIdDocumentDomain(string token, string idMittente) {
            return base.Channel.getMaxIdDocumentDomain(token, idMittente);
        }
        
        public System.Threading.Tasks.Task<string> getMaxIdDocumentDomainAsync(string token, string idMittente) {
            return base.Channel.getMaxIdDocumentDomainAsync(token, idMittente);
        }
        
        public string getDatiPIVA(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string partitaIVAToCheck) {
            return base.Channel.getDatiPIVA(token, idMittente, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico, partitaIVAToCheck);
        }
        
        public System.Threading.Tasks.Task<string> getDatiPIVAAsync(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string partitaIVAToCheck) {
            return base.Channel.getDatiPIVAAsync(token, idMittente, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico, partitaIVAToCheck);
        }
        
        public string creaDocumentoCommerciale(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string modalitaPagamento, string codiceLotteriaCliente, Api.ServiceFatture.ProdListDCObject prodList, int isRetry, string idScontrino) {
            return base.Channel.creaDocumentoCommerciale(token, idMittente, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico, modalitaPagamento, codiceLotteriaCliente, prodList, isRetry, idScontrino);
        }
        
        public System.Threading.Tasks.Task<string> creaDocumentoCommercialeAsync(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string modalitaPagamento, string codiceLotteriaCliente, Api.ServiceFatture.ProdListDCObject prodList, int isRetry, string idScontrino) {
            return base.Channel.creaDocumentoCommercialeAsync(token, idMittente, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico, modalitaPagamento, codiceLotteriaCliente, prodList, isRetry, idScontrino);
        }
        
        public string creaResoParzialeDocumentoCommerciale(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string idtrx, string idScontrino, Api.ServiceFatture.ProdListDCObject prodList) {
            return base.Channel.creaResoParzialeDocumentoCommerciale(token, idMittente, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico, idtrx, idScontrino, prodList);
        }
        
        public System.Threading.Tasks.Task<string> creaResoParzialeDocumentoCommercialeAsync(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string idtrx, string idScontrino, Api.ServiceFatture.ProdListDCObject prodList) {
            return base.Channel.creaResoParzialeDocumentoCommercialeAsync(token, idMittente, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico, idtrx, idScontrino, prodList);
        }
        
        public string creaResoAnnulloDocumentoCommerciale(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string Idtrx, string IdScontrino, string Tipo) {
            return base.Channel.creaResoAnnulloDocumentoCommerciale(token, idMittente, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico, Idtrx, IdScontrino, Tipo);
        }
        
        public System.Threading.Tasks.Task<string> creaResoAnnulloDocumentoCommercialeAsync(string token, string idMittente, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico, string Idtrx, string IdScontrino, string Tipo) {
            return base.Channel.creaResoAnnulloDocumentoCommercialeAsync(token, idMittente, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico, Idtrx, IdScontrino, Tipo);
        }
        
        public string eliminaDocumentoCommerciale(string token, string idMittente, string IdScontrino) {
            return base.Channel.eliminaDocumentoCommerciale(token, idMittente, IdScontrino);
        }
        
        public System.Threading.Tasks.Task<string> eliminaDocumentoCommercialeAsync(string token, string idMittente, string IdScontrino) {
            return base.Channel.eliminaDocumentoCommercialeAsync(token, idMittente, IdScontrino);
        }
        
        public string listaDocumentoCommerciale(string token, string idMittente, string NumeroPagina, string RighePerPagina, string TestoRicerca) {
            return base.Channel.listaDocumentoCommerciale(token, idMittente, NumeroPagina, RighePerPagina, TestoRicerca);
        }
        
        public System.Threading.Tasks.Task<string> listaDocumentoCommercialeAsync(string token, string idMittente, string NumeroPagina, string RighePerPagina, string TestoRicerca) {
            return base.Channel.listaDocumentoCommercialeAsync(token, idMittente, NumeroPagina, RighePerPagina, TestoRicerca);
        }
        
        public string dettaglioDocumentoCommerciale(string token, string idMittente, int IdScontrino) {
            return base.Channel.dettaglioDocumentoCommerciale(token, idMittente, IdScontrino);
        }
        
        public System.Threading.Tasks.Task<string> dettaglioDocumentoCommercialeAsync(string token, string idMittente, int IdScontrino) {
            return base.Channel.dettaglioDocumentoCommercialeAsync(token, idMittente, IdScontrino);
        }
        
        public string sommarioDocumentoCommerciale(string token, string idMittente, int dataDa, int dataA) {
            return base.Channel.sommarioDocumentoCommerciale(token, idMittente, dataDa, dataA);
        }
        
        public System.Threading.Tasks.Task<string> sommarioDocumentoCommercialeAsync(string token, string idMittente, int dataDa, int dataA) {
            return base.Channel.sommarioDocumentoCommercialeAsync(token, idMittente, dataDa, dataA);
        }
        
        public string checkCredenzialiAdE(string token, string PartitaIva, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico) {
            return base.Channel.checkCredenzialiAdE(token, PartitaIva, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico);
        }
        
        public System.Threading.Tasks.Task<string> checkCredenzialiAdEAsync(string token, string PartitaIva, string AdE_CodiceFiscale, string AdE_PIN, string AdE_Password, string AdE_TipoIncarico) {
            return base.Channel.checkCredenzialiAdEAsync(token, PartitaIva, AdE_CodiceFiscale, AdE_PIN, AdE_Password, AdE_TipoIncarico);
        }
        
        public string insertUserToken(string authToken, string token, string partitaIVA) {
            return base.Channel.insertUserToken(authToken, token, partitaIVA);
        }
        
        public System.Threading.Tasks.Task<string> insertUserTokenAsync(string authToken, string token, string partitaIVA) {
            return base.Channel.insertUserTokenAsync(authToken, token, partitaIVA);
        }
        
        public string checkUserToken(string authToken, string token, string partitaIVA) {
            return base.Channel.checkUserToken(authToken, token, partitaIVA);
        }
        
        public System.Threading.Tasks.Task<string> checkUserTokenAsync(string authToken, string token, string partitaIVA) {
            return base.Channel.checkUserTokenAsync(authToken, token, partitaIVA);
        }
    }
}
